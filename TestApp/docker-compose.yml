version: '3.8'

services:
  rabbitmq:
    image: rabbitmq
    container_name: 'rabbitmq'
    ports:
        - "5672:5672"
    volumes:
        - ./docker-configuration/rabbitmq/data/:/var/lib/rabbitmq/
        - ./docker-configuration/rabbitmq/log/:/var/log/rabbitmq
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 30s
      timeout: 30s
      retries: 3
  db:
    image: postgres
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=testdb
    volumes:
      - ./docker-configuration/postgres-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
  web: 
    image: nginx
    restart: always
    ports:
      - "80:80"
    environment:
      - NGINX_PORT=80
    volumes:
      - ./docker-configuration/nginx/templates:/etc/nginx/templates
    links:
      - api1.test-app
      - api2.test-app
  api1.test-app:
    build:
      context: .
      dockerfile: Test-app.Dockerfile
    container_name: api1.test-app
    volumes:
      - ./docker-configuration/test-app-api/api1.appsettings.json:/app/appsettings.json
    depends_on:
      db:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    links:
      - db
      - rabbitmq
  api2.test-app:
    build:
      context: .
      dockerfile: Test-app.Dockerfile
    container_name: api2.test-app
    volumes:
      - ./docker-configuration/test-app-api/api2.appsettings.json:/app/appsettings.json
    depends_on:
      db:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    links:
      - db
      - rabbitmq
  test-app-worker1:
    build:
      context: .
      dockerfile: Test-app-Worker.Dockerfile
    container_name: test-app-worker1
    volumes:
      - ./docker-configuration/test-app-worker/worker1.appsettings.json:/app/appsettings.json
    depends_on:
      db:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    links:
      - db
      - rabbitmq

volumes:
  db:
    driver: local